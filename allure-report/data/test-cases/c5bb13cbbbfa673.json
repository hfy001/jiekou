{
  "uid" : "c5bb13cbbbfa673",
  "name" : "获取未付款订单信息",
  "fullName" : "test_case.test_order.TestOrder#test_orderDetail",
  "historyId" : "f72e0ec6d2f2678e62e59f7613b71ae1",
  "time" : {
    "start" : 1606560227157,
    "stop" : 1606560227375,
    "duration" : 218
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert -1 == 1\n +  where -1 = <test_case.test_order.TestOrder object at 0x04DA41D8>.resaddresscode",
  "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x04DA41D8>, id = 32\napi_id = 32, params = \"{'orderno':'C2011181104128819'}\", rowid = 33\nloginssid = <common.login.login1 object at 0x04BBDC88>\n\n    @allure.step(\"获取未付款订单信息\")\n    @allure.title(\"获取未付款订单信息\")\n    @pytest.mark.parametrize(\"id,api_id,params,rowid\",[casedate1[31]])\n    def test_orderDetail(self,id,api_id,params,rowid,loginssid):\n        re = self.order.orderDetail(eval(params),loginssid)\n        self.resaddresscode = re.json()[\"code\"]\n>       assert self.resaddresscode == 1\nE       assert -1 == 1\nE        +  where -1 = <test_case.test_order.TestOrder object at 0x04DA41D8>.resaddresscode\n\ntest_case\\test_order.py:45: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "loginssid",
    "time" : {
      "start" : 1606560227157,
      "stop" : 1606560227157,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1606560226701,
      "stop" : 1606560226701,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert -1 == 1\n +  where -1 = <test_case.test_order.TestOrder object at 0x04DA41D8>.resaddresscode",
    "statusTrace" : "self = <test_case.test_order.TestOrder object at 0x04DA41D8>, id = 32\napi_id = 32, params = \"{'orderno':'C2011181104128819'}\", rowid = 33\nloginssid = <common.login.login1 object at 0x04BBDC88>\n\n    @allure.step(\"获取未付款订单信息\")\n    @allure.title(\"获取未付款订单信息\")\n    @pytest.mark.parametrize(\"id,api_id,params,rowid\",[casedate1[31]])\n    def test_orderDetail(self,id,api_id,params,rowid,loginssid):\n        re = self.order.orderDetail(eval(params),loginssid)\n        self.resaddresscode = re.json()[\"code\"]\n>       assert self.resaddresscode == 1\nE       assert -1 == 1\nE        +  where -1 = <test_case.test_order.TestOrder object at 0x04DA41D8>.resaddresscode\n\ntest_case\\test_order.py:45: AssertionError",
    "steps" : [ {
      "name" : "获取未付款订单信息",
      "time" : {
        "start" : 1606560227158,
        "stop" : 1606560227374,
        "duration" : 216
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert -1 == 1\n +  where -1 = <test_case.test_order.TestOrder object at 0x04DA41D8>.resaddresscode\n",
      "statusTrace" : "  File \"C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\pythonbijia\\test_case\\test_order.py\", line 45, in test_orderDetail\n    assert self.resaddresscode == 1\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "id",
        "value" : "32"
      }, {
        "name" : "api_id",
        "value" : "32"
      }, {
        "name" : "params",
        "value" : "'{'orderno':'C2011181104128819'}'"
      }, {
        "name" : "rowid",
        "value" : "33"
      }, {
        "name" : "loginssid",
        "value" : "<common.login.login1 object at 0x04BBDC88>"
      } ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1606560228155,
      "stop" : 1606560228155,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "订单模块"
  }, {
    "name" : "epic",
    "value" : "药房网APP"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_order"
  }, {
    "name" : "subSuite",
    "value" : "TestOrder"
  }, {
    "name" : "host",
    "value" : "DESKTOP-EQA5M9D"
  }, {
    "name" : "thread",
    "value" : "6592-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_order"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "api_id",
    "value" : "32"
  }, {
    "name" : "id",
    "value" : "32"
  }, {
    "name" : "params",
    "value" : "'{'orderno':'C2011181104128819'}'"
  }, {
    "name" : "rowid",
    "value" : "33"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "6eb875d454624093",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert -1 == 1\n +  where -1 = <test_case.test_order.TestOrder object at 0x04B41E98>.resaddresscode",
      "time" : {
        "start" : 1605858895199,
        "stop" : 1605858895431,
        "duration" : 232
      }
    }, {
      "uid" : "944c0f481d44467b",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert -1 == 1\n +  where -1 = <test_case.test_order.TestOrder object at 0x05451868>.resaddresscode",
      "time" : {
        "start" : 1605850109268,
        "stop" : 1605850109619,
        "duration" : 351
      }
    }, {
      "uid" : "9584c9c5877186ec",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert -1 == 1\n +  where -1 = <test_case.test_order.TestOrder object at 0x04862AA8>.resaddresscode",
      "time" : {
        "start" : 1605842265013,
        "stop" : 1605842265253,
        "duration" : 240
      }
    }, {
      "uid" : "acb0153d6d8eb804",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert -1 == 1\n +  where -1 = <test_case.test_order.TestOrder object at 0x0519A808>.resaddresscode",
      "time" : {
        "start" : 1605836389896,
        "stop" : 1605836390098,
        "duration" : 202
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c5bb13cbbbfa673.json",
  "parameterValues" : [ "32", "32", "'{'orderno':'C2011181104128819'}'", "33" ]
}